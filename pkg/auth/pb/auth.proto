syntax = "proto3";

package auth;

option go_package = "./pkg/auth";

service AuthService {
    rpc Login(LoginRequest) returns (LoginResponse) {}
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc Validate(ValidateRequest) returns (ValidateResponse) {}
    rpc ForgetPassword(ForgetPasswordRequest) returns (ForgetPasswordResponse) {}
    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {}
    rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse) {}
}

/// Login Endpoint
message LoginRequest {
    string username = 1;
    string password = 2;
}

/// [status] is status code of the operation.
/// [error] is a human-readable error message, if any.
/// [accessToken] is a JWT token that can be used for authentication.
/// [refreshToken] is a JWT token that can be used for refreshing the access token.
message LoginResponse {
    int64 status = 1;
    string error = 2;
    string accessToken = 3;
    string refreshToken = 4;
}

/// Register Endpoint

/// [username] is the username of the user.
/// [password] is the password of the user.
/// [email] is the email of the user.
message RegisterRequest {
    string username = 1;
    string password = 2;
    string email = 3;
}

/// [status] is status code of the operation.
/// [error] is a human-readable error message, if any.
message RegisterResponse {
    int64 status = 1;
    string error = 2;
}

/// Validete Endpoint

/// [code] is the code that was sent to the user to validate account.
message ValidateRequest {
    string code = 1;
}

/// [status] is status code of the operation.
/// [error] is a human-readable error message, if any.
message ValidateResponse {
    int64 status = 1;
    string error = 2;
}

/// Forget Password Endpoint

/// [email] is the email of the user.
message ForgetPasswordRequest {
    string email = 1;
}

/// [status] is status code of the operation.
/// [error] is a human-readable error message, if any.
message ForgetPasswordResponse {
    int64 status = 1;
    string error = 2;
}

/// Reset Password Endpoint

/// [code] is the code that was sent to the user to reset password.
/// [password] is the new password of the user.
message ResetPasswordRequest {
    string code = 1;
    string password = 2;
}

/// [status] is status code of the operation.
/// [error] is a human-readable error message, if any.
message ResetPasswordResponse {
    int64 status = 1;
    string error = 2;
}


/// Get User Info Endpoint

/// [username] is the username of the user.
/// [email] is the email of the user.
message GetUserInfoRequest {
    string username = 1;
    string email = 2;
}

/// [status] is status code of the operation.
/// [error] is a human-readable error message, if any.
message GetUserInfoResponse {
    int64 status = 1;
    string error = 2;
}
